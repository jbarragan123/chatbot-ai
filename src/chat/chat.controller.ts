import { Controller, Post, Body } from '@nestjs/common';
import { ApiTags, ApiOperation, ApiResponse, ApiBody } from '@nestjs/swagger';
import { ChatService } from './chat.service';
import { UserQueryDto } from './dto/user-query.dto';

@ApiTags('Chat')
@Controller('chat')
export class ChatController {
  constructor(private readonly chatService: ChatService) {}

  /**
   * Handles natural language queries from the user, such as product searches
   * or currency conversions. Delegates processing to the ChatService.
   *
   * @param userQueryDto - Contains the user's query string
   * @returns A response string generated by the AI assistant
   */
  @Post()
  @ApiOperation({
    summary: 'Handle user query',
    description:
      'Processes a userâ€™s query to search products or convert currencies using OpenAI Function Calling.',
  })
  @ApiBody({ type: UserQueryDto })
  @ApiResponse({ status: 200, description: 'Query processed successfully' })
  @ApiResponse({ status: 400, description: 'Invalid input' })
  @ApiResponse({ status: 500, description: 'Internal server error' })
  async handleUserQuery(@Body() userQueryDto: UserQueryDto): Promise<string> {
    return this.chatService.processUserQuery(userQueryDto.query);
  }
}
